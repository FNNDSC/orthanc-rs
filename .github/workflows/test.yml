name: Test

on:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/test.yml'
      - 'orthanc_api/**.rs'
      - 'orthanc_sdk/**.rs'
      - '**/Cargo.lock'
      - '**/Cargo.toml'
      - '**/justfile'
      - 'examples/**'
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build devShell
        run: nix build --no-link .#devShell.$(uname -m)-linux
      - name: Codegen
        shell: 'nix develop -c bash -e {0}'
        run: just
      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2
      - name: Prepare test coverage environment
        shell: 'nix develop -c bash -e {0}'
        run: |
          cargo llvm-cov show-env | sed "s/'//g" >> "$GITHUB_ENV"
          cargo llvm-cov clean --workspace
      - name: Build
        shell: 'nix develop -c bash -e {0}'
        working-directory: examples
        run: just build
      - name: Start Orthanc
        id: start
        shell: 'nix develop -c bash -e {0}'
        working-directory: examples
        run: |
          just up &
          just wait
      - name: Run tests
        id: test
        shell: 'nix develop -c bash -e {0}'
        working-directory: examples
        run: just test
      - name: Print logs
        if: ${{ !cancelled() && (steps.start.outcome == 'failure' || steps.test.outcome == 'failure') }}
        run: cat examples/orthanc.log
      - name: Stop Orthanc
        shell: 'nix develop -c bash -e {0}'
        working-directory: examples
        run: just down
      - name: Report coverage
        if: ${{ !cancelled() }}
        id: report
        shell: 'nix develop -c bash -e {0}'
        run: cargo llvm-cov report --lcov --output-path lcov.info --ignore-filename-regex orthanc_client_ogen
      - name: Upload coverage to Codecov
        if: ${{ !cancelled() && steps.report.outcome == 'success' }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true
